version: "3.8"
services:
  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
  
  db:
    image: postgres:13
    hostname: postgresql
    container_name: postgresql
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - "./data/postgresql:/var/lib/postgresql"
      - "./data/postgresql/data:/var/lib/postgresql/data"
    
#  elasticsearch:
#    container_name: elasticsearch
#    environment:
#      - node.name=es01
#      - cluster.name=es-docker-cluster
#      - discovery.seed_hosts=es02,es03
#      - cluster.initial_master_nodes=es01,es02,es03
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1  
#    volumes:
#      - "./elasticsearch:/usr/share/elasticsearch/data"      

volumes:
  sonarqube_data:
    name : sonarqube_data
  sonarqube_extensions:
    name : sonarqube_extensions 
  sonarqube_logs:
    name :  sonarqube_logs
#  postgresql: "./data/postgresql"
 # postgresql_data: "./data/postgresql/data"